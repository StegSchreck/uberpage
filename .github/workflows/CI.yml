name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    strategy:
      matrix:
        node-version: [20.x, latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        cd uberpage
        npm ci
        npm run lint
        npm test -- --coverage
        cp -f src/data.github.js src/data.js
        ../scripts/adjust_homepage.sh "https://stegschreck.github.io"
        npm run build
      env:
        CI: true
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        api-token: ${{ secrets.CODACY_API_TOKEN }}
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Create Release
      uses: softprops/action-gh-release@v0.1.14
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Build
      run: |
        cd uberpage
        npm install -g npm@latest
        npm ci
        cp -f src/data.github.js src/data.js
        ../scripts/adjust_homepage.sh "https://stegschreck.github.io"
        npm run build
      env:
        CI: true
    - name: Deploy GitHub Pages site
      uses: JamesIves/github-pages-deploy-action@v4
      if: github.ref_name == 'master'
      with:
        # GitHub repository where assets will be deployed (default current)
        repository-name: StegSchreck/stegschreck.github.io
        # Git branch where assets will be deployed
        branch: master
        # delete files from your deployment destination that no longer exist in your deployment source
        clean: true
        # Build directory to deploy
        folder: uberpage/build
        token: ${{ secrets.GHA_PAT }}
